# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  cache:
    image: redis/redis-stack:latest
    container_name: cache
    restart: always
    ports:
      - 6379:6379
      - 8001:8001
    command: redis-stack-server --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999" # JMX monitoring
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092,INTERNAL://:29092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: "9h_5zKQ7TGyY-H7vhNkFfA"
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
      

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    restart: always
    ports:
      - 8081:8081
    environment:
      PORT: 8081
      MONGO_URL: mongodb://root:example@mongo:27017/
      MONGODB_DB_NAME: stackoverflow
      MONGODB_COLLECTION: questions
      REDIS_URL: redis://cache:6379
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      KAFKA_BROKER: kafka:29092
      KAFKA_CLIENT_ID: api
      KAFKA_TOPIC: search-results
    depends_on:
      - mongo
      - cache
      - kafka

  listener:
    build:
      context: ./listener
      dockerfile: Dockerfile
    container_name: listener
    restart: always
    ports:
      - 3001:3001
    environment:
      PORT: 3001
      KAFKA_BROKER: kafka:29092
      KAFKA_CLIENT_ID: listener
      KAFKA_TOPIC: search-results
      MONGO_URL: mongodb://root:example@mongo:27017/
      MONGODB_DB_NAME: stackoverflow
      MONGODB_COLLECTION: search-logs
    depends_on:
      - mongo
      - kafka

# Add this volumes section at the root level
volumes:
  cache:
    driver: local
  kafka-data:
    driver: local

